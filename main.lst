

HI-TECH Software PICC Macro Assembler V9.50PL2
                                                      Sun Sep 29 21:27:27 2019


     1                           	processor	16F877A
     2                           	opt	pw 79
     3                           	psect	rdata_0,global,class=BANK0,space=1,delta
      +                          =1
     4                           	psect	idata_0,global,class=CODE,delta=2
     5                           	psect	text0,local,class=CODE,delta=2
     6                           	psect	text1,local,class=CODE,delta=2
     7                           	psect	text2,local,class=CODE,delta=2
     8                           	psect	text3,local,class=CODE,delta=2
     9                           	psect	text4,local,class=CODE,delta=2
    10                           	psect	text5,local,class=CODE,delta=2
    11                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
    12  0000                     
    13  0000                     
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19  0000                     
    20  0000                     
    21  0000                     
    22                           
    23                           	psect	rdata_0
    24  0033                     _d
    25  0033                     	ds	1
    26  0034                     	ds	1
    27  0035                     	ds	1
    28  0036                     	ds	1
    29  0037                     	ds	1
    30  0038                     	ds	1
    31  0039                     	ds	1
    32  003A                     	ds	1
    33  003B                     	ds	1
    34  003C                     	ds	1
    35  003D                     	ds	1
    36  003E                     	ds	1
    37  003F                     	ds	1
    38  0040                     	ds	1
    39  0041                     	ds	1
    40  0042                     	ds	1
    41  0043                     	ds	1
    42  0044                     _c
    43  0044                     	ds	1
    44  0045                     	ds	1
    45  0046                     	ds	1
    46  0047                     	ds	1
    47  0048                     	ds	1
    48  0049                     	ds	1
    49  004A                     	ds	1
    50  004B                     	ds	1
    51  004C                     	ds	1
    52  004D                     	ds	1
    53  004E                     	ds	1
    54  004F                     	ds	1
    55  0050                     	ds	1
    56  0000                     _delay$dely	set	?_delay
    57                           
    58                           	psect	idata_0
    59  07E2  3449               	retlw	73
    60  07E3  344E               	retlw	78
    61  07E4  3454               	retlw	84
    62  07E5  3445               	retlw	69
    63  07E6  3452               	retlw	82
    64  07E7  3446               	retlw	70
    65  07E8  3441               	retlw	65
    66  07E9  3443               	retlw	67
    67  07EA  3449               	retlw	73
    68  07EB  344E               	retlw	78
    69  07EC  3447               	retlw	71
    70  07ED  3420               	retlw	32
    71  07EE  344C               	retlw	76
    72  07EF  344D               	retlw	77
    73  07F0  3433               	retlw	51
    74  07F1  3435               	retlw	53
    75  07F2  3400               	retlw	0
    76  07F3  3454               	retlw	84
    77  07F4  3445               	retlw	69
    78  07F5  344D               	retlw	77
    79  07F6  3450               	retlw	80
    80  07F7  3445               	retlw	69
    81  07F8  3452               	retlw	82
    82  07F9  3441               	retlw	65
    83  07FA  3454               	retlw	84
    84  07FB  3455               	retlw	85
    85  07FC  3452               	retlw	82
    86  07FD  3445               	retlw	69
    87  07FE  343A               	retlw	58
    88  07FF  3400               	retlw	0
    89                           
    90                           	psect	text0
    91  05FB                     _delay
    92                           ;	_i assigned to ?a_delay+0
    93  0000                     _delay$i	set	?a_delay
    94                           ;	_j assigned to ?a_delay+2
    95  0000                     _delay$j	set	?a_delay+2
    96                           ;main.c: 4: void delay(unsigned int dely){
    97  05FB  0183               	clrf	3	;select bank 0
    98  05FC  01AF               	clrf	?a_delay
    99  05FD  01B0               	clrf	?a_delay+1
   100  05FE  2E11               	goto	l5
   101  05FF                     l2
   102                           ;main.c: 7: for(j=0;j<1257;j++);
   103  05FF  01B1               	clrf	?a_delay+2
   104  0600  01B2               	clrf	?a_delay+3
   105  0601                     l6
   106  0601  0AB1               	incf	?a_delay+2
   107  0602  1903               	btfsc	3,2
   108  0603  0AB2               	incf	?a_delay+3
   109  0604  0832               	movf	?a_delay+3,w
   110  0605  3A80               	xorlw	128
   111  0606  00F0               	movwf	btemp
   112  0607  3084               	movlw	132
   113  0608  0270               	subwf	btemp,w
   114  0609  30E9               	movlw	233
   115                           ;set	bank bits for (((?a_delay+2)))
   116  060A  1903               	btfsc	3,2
   117  060B  0231               	subwf	?a_delay+2,w
   118  060C  1C03               	btfss	3,0
   119  060D  2E01               	goto	l6
   120  060E  0AAF               	incf	?a_delay
   121  060F  1903               	btfsc	3,2
   122  0610  0AB0               	incf	?a_delay+1
   123  0611                     l5
   124  0611  082E               	movf	?_delay+1,w
   125  0612  0230               	subwf	?a_delay+1,w
   126  0613  1D03               	btfss	3,2
   127  0614  2E17               	goto	u25
   128  0615  082D               	movf	?_delay,w
   129  0616  022F               	subwf	?a_delay,w
   130  0617                     u25
   131  0617  1803               	btfsc	3,0
   132  0618  0008               	return
   133  0619  2DFF               	goto	l2
   134                           
   135                           	psect	text1
   136  05E3                     _lcdcmd
   137                           ;	_y assigned to ?a_lcdcmd+0
   138  0000                     _lcdcmd$y	set	?a_lcdcmd
   139                           ;_y stored from w
   140  05E3  0183               	clrf	3	;select bank 0
   141  05E4  00AC               	movwf	?a_lcdcmd
   142                           ;main.c: 10: void lcdcmd(char y){
   143  05E5  0088               	movwf	8	;volatile
   144                           ;main.c: 12: RC0=0;
   145  05E6  1007               	bcf	7,0
   146                           ;main.c: 13: RC1=0;
   147  05E7  1087               	bcf	7,1
   148                           ;main.c: 14: RC2=0;
   149  05E8  1107               	bcf	7,2
   150                           ;main.c: 15: delay(1);
   151  05E9  01AD               	clrf	?_delay
   152  05EA  0AAD               	incf	?_delay
   153  05EB  01AE               	clrf	?_delay+1
   154  05EC  25FB               	call	_delay
   155                           ;main.c: 16: RC2=1;
   156  05ED  1507               	bsf	7,2
   157                           ;main.c: 17: }
   158  05EE  0008               	return	;W free
   159                           
   160                           	psect	text2
   161  05EF                     _write
   162                           ;	_x assigned to ?a_write+0
   163  0000                     _write$x	set	?a_write
   164                           ;_x stored from w
   165  05EF  0183               	clrf	3	;select bank 0
   166  05F0  00AC               	movwf	?a_write
   167                           ;main.c: 18: void write(char x){
   168  05F1  0088               	movwf	8	;volatile
   169                           ;main.c: 20: RC0=1;
   170  05F2  1407               	bsf	7,0
   171                           ;main.c: 21: RC1=0;
   172  05F3  1087               	bcf	7,1
   173                           ;main.c: 22: RC2=0;
   174  05F4  1107               	bcf	7,2
   175                           ;main.c: 23: delay(1);
   176  05F5  01AD               	clrf	?_delay
   177  05F6  0AAD               	incf	?_delay
   178  05F7  01AE               	clrf	?_delay+1
   179  05F8  25FB               	call	_delay
   180                           ;main.c: 24: RC2=1;
   181  05F9  1507               	bsf	7,2
   182                           ;main.c: 25: }
   183  05FA  0008               	return	;W free
   184                           
   185                           	psect	text3
   186  061A                     _display
   187                           ;	_a1 assigned to ?a_display+0
   188  0000                     _display$a1	set	?a_display
   189                           ;	_b assigned to ?a_display+2
   190  0000                     _display$b	set	?a_display+2
   191                           ;	_i assigned to ?a_display+4
   192  0000                     _display$i	set	?a_display+4
   193                           ;main.c: 26: void display(int x){
   194  061A  300A               	movlw	10
   195  061B  00F2               	movwf	btemp+2
   196  061C  01F3               	clrf	btemp+3
   197  061D  1283               	bcf	3,5
   198  061E  1303               	bcf	3,6	;carry unused
   199  061F  0825               	movf	?_display+1,w
   200  0620  00F1               	movwf	btemp+1
   201  0621  0824               	movf	?_display,w
   202  0622  00F0               	movwf	btemp
   203  0623  2785               	call	awdiv
   204  0624  3030               	movlw	48
   205  0625  0774               	addwf	btemp+4,w
   206  0626  00A8               	movwf	?a_display+2
   207  0627  3000               	movlw	0
   208  0628  1803               	btfsc	3,0
   209  0629  3001               	movlw	1
   210  062A  0775               	addwf	btemp+5,w
   211  062B  00A9               	movwf	?a_display+3
   212                           ;main.c: 29: a1=0x30+(x%0x0A);
   213  062C  300A               	movlw	10
   214  062D  00F2               	movwf	btemp+2
   215  062E  01F3               	clrf	btemp+3
   216  062F  0825               	movf	?_display+1,w
   217  0630  00F1               	movwf	btemp+1
   218  0631  0824               	movf	?_display,w
   219  0632  00F0               	movwf	btemp
   220  0633  2785               	call	awmod
   221  0634  3030               	movlw	48
   222  0635  0770               	addwf	btemp,w
   223  0636  00A6               	movwf	?a_display
   224  0637  3000               	movlw	0
   225  0638  1803               	btfsc	3,0
   226  0639  3001               	movlw	1
   227  063A  0771               	addwf	btemp+1,w
   228  063B  00A7               	movwf	?a_display+1
   229                           ;main.c: 30: lcdcmd(0x3c);
   230  063C  303C               	movlw	60
   231  063D  25E3               	call	_lcdcmd
   232                           ;main.c: 31: lcdcmd(0xc0);
   233  063E  30C0               	movlw	-64
   234  063F  25E3               	call	_lcdcmd
   235                           ;main.c: 32: for(i=0;i<12;i++){
   236  0640  01AA               	clrf	?a_display+4
   237  0641  01AB               	clrf	?a_display+5
   238  0642                     l12
   239                           ;main.c: 33: write(c[i]);
   240  0642  082A               	movf	?a_display+4,w
   241  0643  3E44               	addlw	_c
   242  0644  0084               	movwf	4
   243  0645  1383               	bcf	3,7
   244  0646  0800               	movf	0,w
   245  0647  25EF               	call	_write
   246  0648  0AAA               	incf	?a_display+4
   247  0649  1903               	btfsc	3,2
   248  064A  0AAB               	incf	?a_display+5
   249  064B  082B               	movf	?a_display+5,w
   250  064C  3A80               	xorlw	128
   251  064D  00F0               	movwf	btemp
   252  064E  3080               	movlw	128
   253  064F  0270               	subwf	btemp,w
   254  0650  300C               	movlw	12
   255                           ;set	bank bits for (((?a_display+4)))
   256  0651  1903               	btfsc	3,2
   257  0652  022A               	subwf	?a_display+4,w
   258  0653  1C03               	btfss	3,0
   259  0654  2E42               	goto	l12
   260                           ;main.c: 34: }
   261  0655  3001               	movlw	1
   262  0656  25E3               	call	_lcdcmd
   263                           ;main.c: 36: write(b);
   264  0657  0828               	movf	?a_display+2,w
   265  0658  25EF               	call	_write
   266                           ;main.c: 37: write(a1);
   267  0659  0826               	movf	?a_display,w
   268  065A  2DEF               	goto	_write
   269                           
   270                           	psect	text4
   271  065B                     _main
   272                           ;	_result assigned to ?a_main+0
   273  0000                     _main$result	set	?a_main
   274                           ;	_i assigned to ?a_main+2
   275  0000                     _main$i	set	?a_main+2
   276                           ;main.c: 40: void main(){
   277  065B  1683               	bsf	3,5
   278  065C  1303               	bcf	3,6	;carry unused
   279  065D  0187               	clrf	7	;volatile
   280                           ;main.c: 44: TRISD=0x00;
   281  065E  0188               	clrf	8	;volatile
   282                           ;main.c: 46: ADCON1=0x8E;
   283  065F  308E               	movlw	-114
   284  0660  009F               	movwf	31	;volatile
   285                           ;main.c: 47: ADCON0=0x41;
   286  0661  3041               	movlw	65
   287  0662  1283               	bcf	3,5
   288  0663  009F               	movwf	31	;volatile
   289                           ;main.c: 48: TRISA=0x01;
   290  0664  3001               	movlw	1
   291  0665  1683               	bsf	3,5
   292  0666  0085               	movwf	5	;volatile
   293                           ;main.c: 49: TRISB=0x00;
   294  0667  0186               	clrf	6	;volatile
   295                           ;main.c: 50: delay(2);
   296  0668  3002               	movlw	2
   297  0669  1283               	bcf	3,5
   298  066A  00AD               	movwf	?_delay
   299  066B  01AE               	clrf	?_delay+1
   300  066C  25FB               	call	_delay
   301                           ;main.c: 51: lcdcmd(0x0E);
   302  066D  300E               	movlw	14
   303  066E  25E3               	call	_lcdcmd
   304                           ;main.c: 53: lcdcmd(0x01);
   305  066F  3001               	movlw	1
   306  0670  25E3               	call	_lcdcmd
   307                           ;main.c: 55: lcdcmd(0x06);
   308  0671  3006               	movlw	6
   309  0672  25E3               	call	_lcdcmd
   310                           ;main.c: 57: lcdcmd(0x80);
   311  0673  3080               	movlw	-128
   312  0674  25E3               	call	_lcdcmd
   313                           ;main.c: 59: for(i=0;i<16;i++){
   314  0675  01A2               	clrf	?a_main+2
   315  0676  01A3               	clrf	?a_main+3
   316  0677                     l16
   317                           ;main.c: 60: write(d[i]);
   318  0677  0822               	movf	?a_main+2,w
   319  0678  3E33               	addlw	_d
   320  0679  0084               	movwf	4
   321  067A  1383               	bcf	3,7
   322  067B  0800               	movf	0,w
   323  067C  25EF               	call	_write
   324  067D  0AA2               	incf	?a_main+2
   325  067E  1903               	btfsc	3,2
   326  067F  0AA3               	incf	?a_main+3
   327  0680  3000               	movlw	0
   328  0681  0223               	subwf	?a_main+3,w
   329  0682  3010               	movlw	16
   330  0683  1903               	btfsc	3,2
   331  0684  0222               	subwf	?a_main+2,w
   332  0685  1C03               	btfss	3,0
   333  0686  2E77               	goto	l16
   334                           ;main.c: 61: }
   335  0687  30BC               	movlw	188
   336  0688  00AD               	movwf	?_delay
   337  0689  3002               	movlw	2
   338  068A  00AE               	movwf	?_delay+1
   339  068B  25FB               	call	_delay
   340  068C                     l20
   341                           ;main.c: 63: while(1){
   342                           ;main.c: 64: ADGO=1;
   343  068C  151F               	bsf	31,2
   344                           ;main.c: 65: while(ADGO);
   345  068D                     l22
   346  068D  191F               	btfsc	31,2
   347  068E  2E8D               	goto	l22
   348                           ;main.c: 66: result=((ADRESH<<8)+ADRESL);
   349  068F  081E               	movf	30,w	;volatile
   350  0690  00A1               	movwf	?a_main+1
   351  0691  1683               	bsf	3,5
   352  0692  081E               	movf	30,w	;volatile
   353  0693  1283               	bcf	3,5
   354  0694  00A0               	movwf	?a_main
   355                           ;main.c: 67: result = result*0.488281;
   356  0695  0821               	movf	?a_main+1,w
   357  0696  00F1               	movwf	btemp+1
   358  0697  0820               	movf	?a_main,w
   359  0698  00F0               	movwf	btemp
   360  0699  2782               	call	lwtoft
   361  069A  01F3               	clrf	btemp+3
   362  069B  30FA               	movlw	250
   363  069C  00F4               	movwf	btemp+4
   364  069D  303E               	movlw	62
   365  069E  00F5               	movwf	btemp+5
   366  069F  2705               	call	ftmul
   367  06A0  2746               	call	fttol
   368  06A1  0870               	movf	btemp,w
   369  06A2  00A0               	movwf	?a_main
   370  06A3  0871               	movf	btemp+1,w
   371  06A4  00A1               	movwf	?a_main+1
   372                           ;main.c: 68: display(result);
   373  06A5  0820               	movf	?a_main,w
   374  06A6  00A4               	movwf	?_display
   375  06A7  0821               	movf	?a_main+1,w
   376  06A8  00A5               	movwf	?_display+1
   377  06A9  261A               	call	_display
   378  06AA  2E8C               	goto	l20
   379                           
   380                           	psect	text5
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579  0000                     
   580  0000                     
   581  0000                     
   582  0000                     
   583  0000                     
   584  0000                     
   585  0000                     
   586  0000                     
   587  0000                     
   588  0000                     
   589  0000                     
   590  0000                     
   591  0000                     
   592  0000                     
   593  0000                     
   594  0000                     
   595  0000                     
   596  0000                     
   597  0000                     
   598  0000                     
   599  0000                     
   600  0000                     
   601  0000                     
   602  0000                     
   603  0000                     
   604  0000                     
   605  0000                     
   606  0000                     
   607  0000                     
   608  0000                     
   609  0000                     
   610  0000                     
   611  0000                     
   612  0000                     
   613  0000                     
   614  0000                     
   615  0000                     
   616  0000                     
   617  0000                     
   618  0000                     
   619  0000                     
   620  0000                     
   621  0000                     
   622  0000                     
   623  0000                     
   624  0000                     
   625  0000                     
   626  0000                     
   627  0000                     
   628  0000                     
   629  0000                     
   630  0000                     
   631  0000                     
   632  0000                     
   633  0000                     
   634  0000                     
   635  0000                     
   636  0000                     
   637  0000                     
   638  0000                     
   639  0000                     
   640  0000                     
   641  0000                     
   642  0000                     
   643  0000                     
   644  0000                     
   645  0000                     
   646  0000                     
   647  0000                     
   648  0000                     
   649  0000                     
   650  0000                     
   651  0000                     
   652  0000                     
   653  0000                     
   654  0000                     
   655  0000                     
   656  0000                     
   657                           
   658                           	psect	temp
   659  0070                     btemp
   660  0070                     	ds	6


HI-TECH Software PICC Macro Assembler V9.50PL2
Symbol Table                                          Sun Sep 29 21:27:27 2019

     ?_delay 002D       ?a_main 0020            l2 05FF            l5 0611  
          l6 0601            _c 0044            _d 0033      ?a_delay 002F  
         l20 068C           l12 0642           l22 068D           l16 0677  
         u25 0617           fsr 0004      ?a_write 002C     ?a_lcdcmd 002C  
   ?_display 0024    ?a_display 0026       _lcdcmd 05E3         _main 065B  
       btemp 0070         awdiv 0785         awmod 0785         ftmul 0705  
       fttol 0746         start 0000      _display 061A        _delay 05FB  
      _write 05EF        lwtoft 0782        status 0003   used_btemp0 0001  
 used_btemp1 0001   used_btemp2 0001   used_btemp3 0001   used_btemp4 0001  
 used_btemp5 0001  
